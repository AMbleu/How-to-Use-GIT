Useful Git Commands
------------------------------------------------------
git init
  -Initializes a git Repository(Locally)
  -Must be in the directory you want to make a Repository
  -This command is not necessary when using GitHub, because project will have already been created/Initialized

git clone -Link to GitHub Repository-
  -Copies the GitHub repository and files onto your local computer
  -Must be in directory where you want to store the files
  -Use this to begin working with GitHub

git add -File to be added-
  -Adds files to the staging area
  -This command must be run before committing because the commit command will create commit commits the files in the staging area
  -Options:
    -A  :adds all the files

git commit
  -Saves the changes you made onto the local Git repository
  -You must add the files to the workspace before committing
  -Options:
    -m  :Creates a message that explains what was committed
    -a  :Chooses all files in the staging area

git push
  -Sends your committed changes to GitHub
  -Option:
    git push origin master

git pull
  -Gets the most updated version of the files from GitHub

git config -l
  -shows how your git is configures including the name and email Git is using

git status
  -shows user if there is anything that has been edited or needs to be committed

git log
  -shows a log of what commits have been made along with their Commit hashes

git branch
  -this command lists all the branches you currently have in your git repository
  -Option
    Adding text to the end of this command creates a new branch with that text.

git checkout
  -Using this command you can switch between branches so after you create a branch you can move into in using checkout
  -This command can also be used to return to previous committed changes using the hash number of the commit after checkout
  -The hash number can be found when you use the log command
